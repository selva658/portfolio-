{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Collider = void 0;\n\nconst Enums_1 = require(\"../../../Enums\");\n\nconst Utils_1 = require(\"../../../Utils\");\n\nconst ParticlesInteractorBase_1 = require(\"../../../Core/ParticlesInteractorBase\");\n\nfunction bounce(p1, p2) {\n  (0, Utils_1.circleBounce)((0, Utils_1.circleBounceDataFromParticle)(p1), (0, Utils_1.circleBounceDataFromParticle)(p2));\n}\n\nfunction destroy(p1, p2) {\n  if (!p1.unbreakable && !p2.unbreakable) {\n    bounce(p1, p2);\n  }\n\n  if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n    p1.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n    p2.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n    if (p1.getRadius() >= p2.getRadius()) {\n      p2.destroy();\n    } else {\n      p1.destroy();\n    }\n  }\n}\n\nclass Collider extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  isEnabled(particle) {\n    return particle.options.collisions.enable;\n  }\n\n  reset() {}\n\n  interact(p1) {\n    const container = this.container;\n    const pos1 = p1.getPosition();\n    const radius1 = p1.getRadius();\n    const query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n\n    for (const p2 of query) {\n      if (p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning) {\n        continue;\n      }\n\n      const pos2 = p2.getPosition();\n\n      if (Math.round(pos1.z) !== Math.round(pos2.z)) {\n        continue;\n      }\n\n      const dist = (0, Utils_1.getDistance)(pos1, pos2);\n      const radius2 = p2.getRadius();\n      const distP = radius1 + radius2;\n\n      if (dist <= distP) {\n        this.resolveCollision(p1, p2);\n      }\n    }\n  }\n\n  resolveCollision(p1, p2) {\n    switch (p1.options.collisions.mode) {\n      case Enums_1.CollisionMode.absorb:\n        {\n          this.absorb(p1, p2);\n          break;\n        }\n\n      case Enums_1.CollisionMode.bounce:\n        {\n          bounce(p1, p2);\n          break;\n        }\n\n      case Enums_1.CollisionMode.destroy:\n        {\n          destroy(p1, p2);\n          break;\n        }\n    }\n  }\n\n  absorb(p1, p2) {\n    const container = this.container;\n    const fps = container.fpsLimit / 1000;\n\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n      p1.destroy();\n    } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n      p2.destroy();\n    } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n      if (p1.getRadius() >= p2.getRadius()) {\n        const factor = (0, Utils_1.clamp)(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n        p1.size.value += factor;\n        p2.size.value -= factor;\n\n        if (p2.getRadius() <= container.retina.pixelRatio) {\n          p2.size.value = 0;\n          p2.destroy();\n        }\n      } else {\n        const factor = (0, Utils_1.clamp)(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n        p1.size.value -= factor;\n        p2.size.value += factor;\n\n        if (p1.getRadius() <= container.retina.pixelRatio) {\n          p1.size.value = 0;\n          p1.destroy();\n        }\n      }\n    }\n  }\n\n}\n\nexports.Collider = Collider;","map":{"version":3,"names":["Object","defineProperty","exports","value","Collider","Enums_1","require","Utils_1","ParticlesInteractorBase_1","bounce","p1","p2","circleBounce","circleBounceDataFromParticle","destroy","unbreakable","getRadius","undefined","ParticlesInteractorBase","constructor","container","isEnabled","particle","options","collisions","enable","reset","interact","pos1","getPosition","radius1","query","particles","quadTree","queryCircle","mode","destroyed","spawning","pos2","Math","round","z","dist","getDistance","radius2","distP","resolveCollision","CollisionMode","absorb","fps","fpsLimit","factor","clamp","size","retina","pixelRatio"],"sources":["C:/Users/Admin/Documents/React/portfolio-/node_modules/tsparticles/Interactions/Particles/Collisions/Collider.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Collider = void 0;\r\nconst Enums_1 = require(\"../../../Enums\");\r\nconst Utils_1 = require(\"../../../Utils\");\r\nconst ParticlesInteractorBase_1 = require(\"../../../Core/ParticlesInteractorBase\");\r\nfunction bounce(p1, p2) {\r\n    (0, Utils_1.circleBounce)((0, Utils_1.circleBounceDataFromParticle)(p1), (0, Utils_1.circleBounceDataFromParticle)(p2));\r\n}\r\nfunction destroy(p1, p2) {\r\n    if (!p1.unbreakable && !p2.unbreakable) {\r\n        bounce(p1, p2);\r\n    }\r\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\r\n        p1.destroy();\r\n    }\r\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\r\n        p2.destroy();\r\n    }\r\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\r\n        if (p1.getRadius() >= p2.getRadius()) {\r\n            p2.destroy();\r\n        }\r\n        else {\r\n            p1.destroy();\r\n        }\r\n    }\r\n}\r\nclass Collider extends ParticlesInteractorBase_1.ParticlesInteractorBase {\r\n    constructor(container) {\r\n        super(container);\r\n    }\r\n    isEnabled(particle) {\r\n        return particle.options.collisions.enable;\r\n    }\r\n    reset() {\r\n    }\r\n    interact(p1) {\r\n        const container = this.container;\r\n        const pos1 = p1.getPosition();\r\n        const radius1 = p1.getRadius();\r\n        const query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\r\n        for (const p2 of query) {\r\n            if (p1 === p2 ||\r\n                !p2.options.collisions.enable ||\r\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\r\n                p2.destroyed ||\r\n                p2.spawning) {\r\n                continue;\r\n            }\r\n            const pos2 = p2.getPosition();\r\n            if (Math.round(pos1.z) !== Math.round(pos2.z)) {\r\n                continue;\r\n            }\r\n            const dist = (0, Utils_1.getDistance)(pos1, pos2);\r\n            const radius2 = p2.getRadius();\r\n            const distP = radius1 + radius2;\r\n            if (dist <= distP) {\r\n                this.resolveCollision(p1, p2);\r\n            }\r\n        }\r\n    }\r\n    resolveCollision(p1, p2) {\r\n        switch (p1.options.collisions.mode) {\r\n            case Enums_1.CollisionMode.absorb: {\r\n                this.absorb(p1, p2);\r\n                break;\r\n            }\r\n            case Enums_1.CollisionMode.bounce: {\r\n                bounce(p1, p2);\r\n                break;\r\n            }\r\n            case Enums_1.CollisionMode.destroy: {\r\n                destroy(p1, p2);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    absorb(p1, p2) {\r\n        const container = this.container;\r\n        const fps = container.fpsLimit / 1000;\r\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\r\n            p1.destroy();\r\n        }\r\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\r\n            p2.destroy();\r\n        }\r\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\r\n            if (p1.getRadius() >= p2.getRadius()) {\r\n                const factor = (0, Utils_1.clamp)(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\r\n                p1.size.value += factor;\r\n                p2.size.value -= factor;\r\n                if (p2.getRadius() <= container.retina.pixelRatio) {\r\n                    p2.size.value = 0;\r\n                    p2.destroy();\r\n                }\r\n            }\r\n            else {\r\n                const factor = (0, Utils_1.clamp)(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\r\n                p1.size.value -= factor;\r\n                p2.size.value += factor;\r\n                if (p1.getRadius() <= container.retina.pixelRatio) {\r\n                    p1.size.value = 0;\r\n                    p1.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Collider = Collider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}