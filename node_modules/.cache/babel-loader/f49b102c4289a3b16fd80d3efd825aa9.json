{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Absorbers = void 0;\n\nconst AbsorberInstance_1 = require(\"./AbsorberInstance\");\n\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\n\nconst Enums_1 = require(\"./Enums\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nclass Absorbers {\n  constructor(container) {\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n    const overridableContainer = container;\n\n    overridableContainer.getAbsorber = idxOrName => idxOrName === undefined || typeof idxOrName === \"number\" ? this.array[idxOrName || 0] : this.array.find(t => t.name === idxOrName);\n\n    overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\n  }\n\n  init(options) {\n    var _a, _b;\n\n    if (!options) {\n      return;\n    }\n\n    if (options.absorbers) {\n      if (options.absorbers instanceof Array) {\n        this.absorbers = options.absorbers.map(s => {\n          const tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.absorbers instanceof Array) {\n          this.absorbers = new Absorber_1.Absorber();\n        }\n\n        this.absorbers.load(options.absorbers);\n      }\n    }\n\n    const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n    if (interactivityAbsorbers) {\n      if (interactivityAbsorbers instanceof Array) {\n        this.interactivityAbsorbers = interactivityAbsorbers.map(s => {\n          const tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.interactivityAbsorbers instanceof Array) {\n          this.interactivityAbsorbers = new Absorber_1.Absorber();\n        }\n\n        this.interactivityAbsorbers.load(interactivityAbsorbers);\n      }\n    }\n\n    if (this.absorbers instanceof Array) {\n      for (const absorberOptions of this.absorbers) {\n        this.addAbsorber(absorberOptions);\n      }\n    } else {\n      this.addAbsorber(this.absorbers);\n    }\n  }\n\n  particleUpdate(particle) {\n    for (const absorber of this.array) {\n      absorber.attract(particle);\n\n      if (particle.destroyed) {\n        break;\n      }\n    }\n  }\n\n  draw(context) {\n    for (const absorber of this.array) {\n      context.save();\n      absorber.draw(context);\n      context.restore();\n    }\n  }\n\n  stop() {\n    this.array = [];\n  }\n\n  resize() {\n    for (const absorber of this.array) {\n      absorber.resize();\n    }\n  }\n\n  handleClickMode(mode) {\n    const container = this.container;\n    const absorberOptions = this.absorbers;\n    const modeAbsorbers = this.interactivityAbsorbers;\n\n    if (mode === Enums_1.AbsorberClickMode.absorber) {\n      let absorbersModeOptions;\n\n      if (modeAbsorbers instanceof Array) {\n        if (modeAbsorbers.length > 0) {\n          absorbersModeOptions = (0, Utils_1.itemFromArray)(modeAbsorbers);\n        }\n      } else {\n        absorbersModeOptions = modeAbsorbers;\n      }\n\n      const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : absorberOptions instanceof Array ? (0, Utils_1.itemFromArray)(absorberOptions) : absorberOptions;\n      const aPosition = container.interactivity.mouse.clickPosition;\n      this.addAbsorber(absorbersOptions, aPosition);\n    }\n  }\n\n  addAbsorber(options, position) {\n    const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, options, position);\n    this.array.push(absorber);\n    return absorber;\n  }\n\n  removeAbsorber(absorber) {\n    const index = this.array.indexOf(absorber);\n\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  }\n\n}\n\nexports.Absorbers = Absorbers;","map":{"version":3,"names":["Object","defineProperty","exports","value","Absorbers","AbsorberInstance_1","require","Absorber_1","Enums_1","Utils_1","constructor","container","array","absorbers","interactivityAbsorbers","overridableContainer","getAbsorber","idxOrName","undefined","find","t","name","addAbsorber","options","position","init","_a","_b","Array","map","s","tmp","Absorber","load","interactivity","modes","absorberOptions","particleUpdate","particle","absorber","attract","destroyed","draw","context","save","restore","stop","resize","handleClickMode","mode","modeAbsorbers","AbsorberClickMode","absorbersModeOptions","length","itemFromArray","absorbersOptions","aPosition","mouse","clickPosition","AbsorberInstance","push","removeAbsorber","index","indexOf","splice"],"sources":["C:/Users/Admin/Documents/React/portfolio-/node_modules/tsparticles/Plugins/Absorbers/Absorbers.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Absorbers = void 0;\r\nconst AbsorberInstance_1 = require(\"./AbsorberInstance\");\r\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\r\nconst Enums_1 = require(\"./Enums\");\r\nconst Utils_1 = require(\"../../Utils\");\r\nclass Absorbers {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.array = [];\r\n        this.absorbers = [];\r\n        this.interactivityAbsorbers = [];\r\n        const overridableContainer = container;\r\n        overridableContainer.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\r\n            ? this.array[idxOrName || 0]\r\n            : this.array.find((t) => t.name === idxOrName);\r\n        overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\r\n    }\r\n    init(options) {\r\n        var _a, _b;\r\n        if (!options) {\r\n            return;\r\n        }\r\n        if (options.absorbers) {\r\n            if (options.absorbers instanceof Array) {\r\n                this.absorbers = options.absorbers.map((s) => {\r\n                    const tmp = new Absorber_1.Absorber();\r\n                    tmp.load(s);\r\n                    return tmp;\r\n                });\r\n            }\r\n            else {\r\n                if (this.absorbers instanceof Array) {\r\n                    this.absorbers = new Absorber_1.Absorber();\r\n                }\r\n                this.absorbers.load(options.absorbers);\r\n            }\r\n        }\r\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\r\n        if (interactivityAbsorbers) {\r\n            if (interactivityAbsorbers instanceof Array) {\r\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\r\n                    const tmp = new Absorber_1.Absorber();\r\n                    tmp.load(s);\r\n                    return tmp;\r\n                });\r\n            }\r\n            else {\r\n                if (this.interactivityAbsorbers instanceof Array) {\r\n                    this.interactivityAbsorbers = new Absorber_1.Absorber();\r\n                }\r\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\r\n            }\r\n        }\r\n        if (this.absorbers instanceof Array) {\r\n            for (const absorberOptions of this.absorbers) {\r\n                this.addAbsorber(absorberOptions);\r\n            }\r\n        }\r\n        else {\r\n            this.addAbsorber(this.absorbers);\r\n        }\r\n    }\r\n    particleUpdate(particle) {\r\n        for (const absorber of this.array) {\r\n            absorber.attract(particle);\r\n            if (particle.destroyed) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    draw(context) {\r\n        for (const absorber of this.array) {\r\n            context.save();\r\n            absorber.draw(context);\r\n            context.restore();\r\n        }\r\n    }\r\n    stop() {\r\n        this.array = [];\r\n    }\r\n    resize() {\r\n        for (const absorber of this.array) {\r\n            absorber.resize();\r\n        }\r\n    }\r\n    handleClickMode(mode) {\r\n        const container = this.container;\r\n        const absorberOptions = this.absorbers;\r\n        const modeAbsorbers = this.interactivityAbsorbers;\r\n        if (mode === Enums_1.AbsorberClickMode.absorber) {\r\n            let absorbersModeOptions;\r\n            if (modeAbsorbers instanceof Array) {\r\n                if (modeAbsorbers.length > 0) {\r\n                    absorbersModeOptions = (0, Utils_1.itemFromArray)(modeAbsorbers);\r\n                }\r\n            }\r\n            else {\r\n                absorbersModeOptions = modeAbsorbers;\r\n            }\r\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? (0, Utils_1.itemFromArray)(absorberOptions) : absorberOptions);\r\n            const aPosition = container.interactivity.mouse.clickPosition;\r\n            this.addAbsorber(absorbersOptions, aPosition);\r\n        }\r\n    }\r\n    addAbsorber(options, position) {\r\n        const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, options, position);\r\n        this.array.push(absorber);\r\n        return absorber;\r\n    }\r\n    removeAbsorber(absorber) {\r\n        const index = this.array.indexOf(absorber);\r\n        if (index >= 0) {\r\n            this.array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexports.Absorbers = Absorbers;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}